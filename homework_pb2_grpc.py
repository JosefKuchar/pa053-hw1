# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import homework_pb2 as homework__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in homework_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class HomeworkStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Begin = channel.unary_unary(
                '/hw1.tasks.Homework/Begin',
                request_serializer=homework__pb2.BeginData.SerializeToString,
                response_deserializer=homework__pb2.Response.FromString,
                _registered_method=True)
        self.Adder = channel.unary_unary(
                '/hw1.tasks.Homework/Adder',
                request_serializer=homework__pb2.AdderTaskResponse.SerializeToString,
                response_deserializer=homework__pb2.Response.FromString,
                _registered_method=True)
        self.Matrix = channel.unary_unary(
                '/hw1.tasks.Homework/Matrix',
                request_serializer=homework__pb2.MatrixTaskResponse.SerializeToString,
                response_deserializer=homework__pb2.Response.FromString,
                _registered_method=True)
        self.ReadLine = channel.unary_stream(
                '/hw1.tasks.Homework/ReadLine',
                request_serializer=homework__pb2.FlipLineRequest.SerializeToString,
                response_deserializer=homework__pb2.Point.FromString,
                _registered_method=True)
        self.SendLine = channel.stream_unary(
                '/hw1.tasks.Homework/SendLine',
                request_serializer=homework__pb2.FlipLineResponse.SerializeToString,
                response_deserializer=homework__pb2.Response.FromString,
                _registered_method=True)


class HomeworkServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Begin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Adder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Matrix(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadLine(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendLine(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HomeworkServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Begin': grpc.unary_unary_rpc_method_handler(
                    servicer.Begin,
                    request_deserializer=homework__pb2.BeginData.FromString,
                    response_serializer=homework__pb2.Response.SerializeToString,
            ),
            'Adder': grpc.unary_unary_rpc_method_handler(
                    servicer.Adder,
                    request_deserializer=homework__pb2.AdderTaskResponse.FromString,
                    response_serializer=homework__pb2.Response.SerializeToString,
            ),
            'Matrix': grpc.unary_unary_rpc_method_handler(
                    servicer.Matrix,
                    request_deserializer=homework__pb2.MatrixTaskResponse.FromString,
                    response_serializer=homework__pb2.Response.SerializeToString,
            ),
            'ReadLine': grpc.unary_stream_rpc_method_handler(
                    servicer.ReadLine,
                    request_deserializer=homework__pb2.FlipLineRequest.FromString,
                    response_serializer=homework__pb2.Point.SerializeToString,
            ),
            'SendLine': grpc.stream_unary_rpc_method_handler(
                    servicer.SendLine,
                    request_deserializer=homework__pb2.FlipLineResponse.FromString,
                    response_serializer=homework__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'hw1.tasks.Homework', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('hw1.tasks.Homework', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Homework(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Begin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hw1.tasks.Homework/Begin',
            homework__pb2.BeginData.SerializeToString,
            homework__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Adder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hw1.tasks.Homework/Adder',
            homework__pb2.AdderTaskResponse.SerializeToString,
            homework__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Matrix(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/hw1.tasks.Homework/Matrix',
            homework__pb2.MatrixTaskResponse.SerializeToString,
            homework__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadLine(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/hw1.tasks.Homework/ReadLine',
            homework__pb2.FlipLineRequest.SerializeToString,
            homework__pb2.Point.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendLine(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/hw1.tasks.Homework/SendLine',
            homework__pb2.FlipLineResponse.SerializeToString,
            homework__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
